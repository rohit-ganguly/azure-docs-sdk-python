### YamlMime:PythonClass
uid: azure.mgmt.computefleet.models.RegularPriorityProfile
name: RegularPriorityProfile
fullName: azure.mgmt.computefleet.models.RegularPriorityProfile
module: azure.mgmt.computefleet.models
inheritances:
- azure.mgmt.computefleet._model_base.Model
summary: Configuration Options for Regular instances in Compute Fleet.
constructor:
  syntax: 'RegularPriorityProfile(*args: Any, **kwargs: Any)'
variables:
- description: Total capacity to achieve. It is currently in terms of number of VMs.
  name: capacity
  types:
  - <xref:int>
- description: 'Minimum capacity to achieve which cannot be updated. If we will not
    be able

    to "guarantee" minimum capacity, we will reject the request in the sync path itself.'
  name: min_capacity
  types:
  - <xref:int>
- description: 'Allocation strategy to follow when determining the VM sizes

    distribution for Regular VMs. Known values are: "LowestPrice" and "Prioritized".'
  name: allocation_strategy
  types:
  - <xref:str>
  - <xref:azure.mgmt.computefleet.models.RegularPriorityAllocationStrategy>
attributes:
- uid: azure.mgmt.computefleet.models.RegularPriorityProfile.allocation_strategy
  name: allocation_strategy
  summary: 'Allocation strategy to follow when determining the VM sizes distribution
    for Regular VMs. Known

    values are: "LowestPrice" and "Prioritized".'
  signature: 'allocation_strategy: str | _models.RegularPriorityAllocationStrategy
    | None'
- uid: azure.mgmt.computefleet.models.RegularPriorityProfile.capacity
  name: capacity
  summary: Total capacity to achieve. It is currently in terms of number of VMs.
  signature: 'capacity: int | None'
- uid: azure.mgmt.computefleet.models.RegularPriorityProfile.min_capacity
  name: min_capacity
  summary: 'Minimum capacity to achieve which cannot be updated. If we will not be
    able to "guarantee"

    minimum capacity, we will reject the request in the sync path itself.'
  signature: 'min_capacity: int | None'
