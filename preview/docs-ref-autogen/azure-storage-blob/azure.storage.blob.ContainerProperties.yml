### YamlMime:PythonClass
uid: azure.storage.blob.ContainerProperties
name: ContainerProperties
fullName: azure.storage.blob.ContainerProperties
module: azure.storage.blob
inheritances:
- azure.storage.blob._shared.models.DictMixin
summary: 'Blob container''s properties class.


  Returned `ContainerProperties` instances expose these values through a

  dictionary interface, for example: `container_props["last_modified"]`.

  Additionally, the container name is available as `container_props["name"]`.'
constructor:
  syntax: 'ContainerProperties(**kwargs: Any)'
methods:
- uid: azure.storage.blob.ContainerProperties.get
  name: get
  signature: get(key, default=None)
  parameters:
  - name: key
    isRequired: true
  - name: default
    defaultValue: None
- uid: azure.storage.blob.ContainerProperties.has_key
  name: has_key
  signature: has_key(k)
  parameters:
  - name: k
    isRequired: true
- uid: azure.storage.blob.ContainerProperties.items
  name: items
  signature: items()
- uid: azure.storage.blob.ContainerProperties.keys
  name: keys
  signature: keys()
- uid: azure.storage.blob.ContainerProperties.update
  name: update
  signature: update(*args, **kwargs)
- uid: azure.storage.blob.ContainerProperties.values
  name: values
  signature: values()
attributes:
- uid: azure.storage.blob.ContainerProperties.deleted
  name: deleted
  summary: Whether this container was deleted.
  signature: 'deleted: bool | None'
- uid: azure.storage.blob.ContainerProperties.encryption_scope
  name: encryption_scope
  summary: The default encryption scope configuration for the container.
  signature: 'encryption_scope: ContainerEncryptionScope | None'
- uid: azure.storage.blob.ContainerProperties.etag
  name: etag
  summary: The ETag contains a value that you can use to perform operations conditionally.
  signature: 'etag: str'
- uid: azure.storage.blob.ContainerProperties.has_immutability_policy
  name: has_immutability_policy
  summary: Represents whether the container has an immutability policy.
  signature: 'has_immutability_policy: bool'
- uid: azure.storage.blob.ContainerProperties.has_legal_hold
  name: has_legal_hold
  summary: Represents whether the container has a legal hold.
  signature: 'has_legal_hold: bool'
- uid: azure.storage.blob.ContainerProperties.immutable_storage_with_versioning_enabled
  name: immutable_storage_with_versioning_enabled
  summary: Represents whether immutable storage with versioning enabled on the container.
  signature: 'immutable_storage_with_versioning_enabled: bool'
- uid: azure.storage.blob.ContainerProperties.last_modified
  name: last_modified
  summary: A datetime object representing the last time the container was modified.
  signature: 'last_modified: datetime'
- uid: azure.storage.blob.ContainerProperties.lease
  name: lease
  summary: Stores all the lease information for the container.
  signature: 'lease: LeaseProperties'
- uid: azure.storage.blob.ContainerProperties.metadata
  name: metadata
  summary: A dict with name-value pairs to associate with the container as metadata.
  signature: 'metadata: Dict[str, Any]'
- uid: azure.storage.blob.ContainerProperties.name
  name: name
  summary: Name of the container.
  signature: 'name: str'
- uid: azure.storage.blob.ContainerProperties.public_access
  name: public_access
  summary: Specifies whether data in the container may be accessed publicly and the
    level of access.
  signature: 'public_access: str | None'
- uid: azure.storage.blob.ContainerProperties.version
  name: version
  summary: The version of a deleted container.
  signature: 'version: str | None'
